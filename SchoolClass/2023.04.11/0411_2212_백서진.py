# -*- coding: utf-8 -*-
"""0411_2212_백서진.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1L7OZlVeh547IPdrm_e4L2W1u8zHasDyS
"""

# 파일 업로드

from google.colab import files
uploaded = files.upload()

# 파일 업로드

from google.colab import files
uploaded = files.upload()

# 파일 불러오기

import pandas as pd
import numpy as np
sales = pd.read_csv( './sales.csv', encoding='utf-8')
customer = pd.read_excel('./customer.xlsx')
print(sales.head())
print(customer.head())

#상품명 오류 수정

sales['item_name'] = sales['item_name'].str.upper()
sales['item_name'] = sales['item_name'].str.replace(' ','')
pd.unique(sales['item_name'])

#구매년월 새로 컬럼

sales['month'] = pd.to_datetime(sales['purchase_date']).dt.strftime('%Y%m')
print(sales['month'])

#등록일 변경

date = customer['등록일'].astype('str').str.isdigit()
date.sum()
newDate1 = pd.to_timedelta(customer.loc[date,'등록일'].astype('float'),unit='D') + pd.to_datetime('1900/01/01') # -2
newDate1
newDate2 = pd.to_datetime( customer.loc[~date,'등록일'])
customer['등록일'] = pd.concat([newDate1, newDate2])
customer

# purchase_date 수정

date = sales['purchase_date'].astype('str').str.isdigit()
newDate1 = pd.to_timedelta(sales.loc[date,'purchase_date'].astype('float'),unit='D') + pd.to_datetime('1900/01/01') # -2
newDate2 = pd.to_datetime( sales.loc[~date,'purchase_date'])
sales['purchase_date'] = pd.concat([newDate1, newDate2])
sales['month'] = pd.to_datetime(sales['purchase_date']).dt.strftime('%Y%m')
print(sales['month'])

#가격 결측치 수정

sales_null = sales['item_price'].isnull()

for i in list( sales.loc[ sales_null, 'item_name'].unique() ):
  price = sales.loc[ ( ~sales_null ) & (sales['item_name'] == i ), 'item_price'].max()
  sales['item_price'].loc[ (sales_null) & (sales['item_name'] == i )] = price
sales.isnull().sum()

#고객 이름 수정

customer['고객이름'] = customer['고객이름'].str.replace(' ', '')
customer['고객이름'] = customer['고객이름'].str.replace('  ', '')

#등록월 추출해서 등록 고객수 집계

customer['등록연월'] = customer['등록일'].dt.strftime('%Y%m')
res= customer.groupby('등록연월')['고객이름'].count()
res

#고객 이름을 key로 두 개의 데이터를 결합(join)

joinData = pd.merge(sales, customer, left_on='customer_name', right_on='고객이름', how='left')
joinData = joinData.drop('고객이름', axis=1)
joinData

#덤프파일 저장

joinData.to_csv('dumpData.csv', index=False)

#데이터분석

joinData.pivot_table(index='month', columns='item_name', values='item_price', aggfunc='sum', fill_value=0)
#고객이름, 지역
joinData.pivot_table(index='month', columns='customer_name', values='item_price', aggfunc='sum', fill_value=0)

# 구매 이력 없는 고객 정보

away = pd.merge(sales, customer, left_on='customer_name', right_on='고객이름',how='right')
away[away['purchase_date_x'].isnull()][['customer_name','등록일']]